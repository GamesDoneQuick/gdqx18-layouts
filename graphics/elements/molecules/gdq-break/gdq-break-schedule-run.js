import * as tslib_1 from "/bundles/gdqx18-layouts/node_modules/tslib/tslib.es6.js";
var GdqBreakScheduleRun_1;
import { TweenLite, TimelineMax, Sine } from "/bundles/gdqx18-layouts/node_modules/gsap/index.js";
const {
  customElement,
  property
} = Polymer.decorators;
const DISPALY_DURATION = nodecg.bundleConfig.displayDuration;
/**
 * @customElement
 * @polymer
 */

let GdqBreakScheduleRun = GdqBreakScheduleRun_1 = class GdqBreakScheduleRun extends Polymer.MutableData(Polymer.Element) {
  /**
   * @customElement
   * @polymer
   */
  constructor() {
    super(...arguments);
    this.upNext = false;
    this._currentRunnerIndex = 0;
  }

  ready() {
    super.ready();
    this.hidden = true;
  }

  _runChanged(newVal) {
    this.hidden = !newVal;

    if (!newVal) {
      return;
    }

    const WIDTH_ADDED_BY_BORDERS = 2;
    const PADDING_OF_INFO_RUNNER = 48;
    const infoRunnerElem = this.$['info-runner'];

    this._killRunnerLoopTimeline();

    infoRunnerElem.maxWidth = 0;
    infoRunnerElem.text = this._getLongestName(newVal.runners);
    TweenLite.set(infoRunnerElem, {
      opacity: 1,
      width: 'auto'
    });
    TweenLite.set(infoRunnerElem.$.fittedContent, {
      scaleX: 1
    });
    Polymer.RenderStatus.beforeNextRender(this, () => {
      infoRunnerElem.maxWidth = this.$.info.clientWidth - WIDTH_ADDED_BY_BORDERS - PADDING_OF_INFO_RUNNER - this.$['info-category'].clientWidth;
      infoRunnerElem.style.width = `${this.$['info-runner'].clientWidth - PADDING_OF_INFO_RUNNER}px`;
      infoRunnerElem.text = newVal.runners[0].name;

      if (newVal.runners.length > 1) {
        this._killRunnerLoopTimeline();

        this._runnerTimeline = this._createRunnerLoopTimeline(newVal.runners);
      }
    });
  }

  _createRunnerLoopTimeline(runners) {
    const tl = new TimelineMax({
      repeat: -1
    });
    runners.slice(1).concat([runners[0]]).forEach(runner => {
      tl.to(this.$['info-runner'], 0.5, {
        opacity: 0,
        ease: Sine.easeInOut
      }, `+=${DISPALY_DURATION}`);
      tl.call(() => {
        this.$['info-runner'].text = runner.name;
      });
      tl.to(this.$['info-runner'], 0.5, {
        opacity: 1,
        ease: Sine.easeInOut
      }, '+=0.1');
    });
    return tl;
  }

  _killRunnerLoopTimeline() {
    if (this._runnerTimeline) {
      this._runnerTimeline.kill();

      this._runnerTimeline = null;
    }
  }

  _formatRunName(runName) {
    if (!runName || typeof runName !== 'string') {
      return '?';
    }

    return runName.replace(/\\n/g, ' ');
  }

  _getLongestName(runners) {
    return runners.reduce((accumulator, currentValue) => {
      if (!currentValue || !currentValue.name) {
        return accumulator;
      }

      return currentValue.name.length > accumulator.length ? currentValue.name : accumulator;
    }, '');
  }

};

tslib_1.__decorate([property({
  type: Object,
  observer: GdqBreakScheduleRun_1.prototype._runChanged
})], GdqBreakScheduleRun.prototype, "run", void 0);

tslib_1.__decorate([property({
  type: Boolean,
  reflectToAttribute: true
})], GdqBreakScheduleRun.prototype, "upNext", void 0);

tslib_1.__decorate([property({
  type: Number
})], GdqBreakScheduleRun.prototype, "_currentRunnerIndex", void 0);

GdqBreakScheduleRun = GdqBreakScheduleRun_1 = tslib_1.__decorate([customElement('gdq-break-schedule-run')], GdqBreakScheduleRun);
export default GdqBreakScheduleRun;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdkcS1icmVhay1zY2hlZHVsZS1ydW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxTQUFRLFNBQVIsRUFBbUIsV0FBbkIsRUFBZ0MsSUFBaEMsUUFBMkMsb0RBQTNDO0FBRUEsTUFBTTtBQUFDLEVBQUEsYUFBRDtBQUFnQixFQUFBO0FBQWhCLElBQTRCLE9BQU8sQ0FBQyxVQUExQztBQUNBLE1BQU0sZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLFlBQVAsQ0FBb0IsZUFBN0M7QUFFQTs7Ozs7QUFLQSxJQUFxQixtQkFBbUIsR0FBQSxxQkFBQSxHQUF4QyxNQUFxQixtQkFBckIsU0FBaUQsT0FBTyxDQUFDLFdBQVIsQ0FBb0IsT0FBTyxDQUFDLE9BQTVCLENBQWpELENBQXFGO0FBTHJGOzs7O0FBSUEsRUFBQSxXQUFBLEdBQUE7O0FBTUMsU0FBQSxNQUFBLEdBQWtCLEtBQWxCO0FBR0EsU0FBQSxtQkFBQSxHQUE4QixDQUE5QjtBQXdGQTs7QUFwRkEsRUFBQSxLQUFLLEdBQUE7QUFDSixVQUFNLEtBQU47QUFDQSxTQUFLLE1BQUwsR0FBYyxJQUFkO0FBQ0E7O0FBRUQsRUFBQSxXQUFXLENBQUMsTUFBRCxFQUFZO0FBQ3RCLFNBQUssTUFBTCxHQUFjLENBQUMsTUFBZjs7QUFDQSxRQUFJLENBQUMsTUFBTCxFQUFhO0FBQ1o7QUFDQTs7QUFFRCxVQUFNLHNCQUFzQixHQUFHLENBQS9CO0FBQ0EsVUFBTSxzQkFBc0IsR0FBRyxFQUEvQjtBQUNBLFVBQU0sY0FBYyxHQUFHLEtBQUssQ0FBTCxDQUFPLGFBQVAsQ0FBdkI7O0FBRUEsU0FBSyx1QkFBTDs7QUFFQyxJQUFBLGNBQXNCLENBQUMsUUFBdkIsR0FBa0MsQ0FBbEM7QUFDQSxJQUFBLGNBQXNCLENBQUMsSUFBdkIsR0FBOEIsS0FBSyxlQUFMLENBQXFCLE1BQU0sQ0FBQyxPQUE1QixDQUE5QjtBQUNELElBQUEsU0FBUyxDQUFDLEdBQVYsQ0FBYyxjQUFkLEVBQThCO0FBQUMsTUFBQSxPQUFPLEVBQUUsQ0FBVjtBQUFhLE1BQUEsS0FBSyxFQUFFO0FBQXBCLEtBQTlCO0FBQ0EsSUFBQSxTQUFTLENBQUMsR0FBVixDQUFjLGNBQWMsQ0FBQyxDQUFmLENBQWlCLGFBQS9CLEVBQThDO0FBQUMsTUFBQSxNQUFNLEVBQUU7QUFBVCxLQUE5QztBQUVBLElBQUEsT0FBTyxDQUFDLFlBQVIsQ0FBcUIsZ0JBQXJCLENBQXNDLElBQXRDLEVBQTRDLE1BQUs7QUFDL0MsTUFBQSxjQUFzQixDQUFDLFFBQXZCLEdBQ0EsS0FBSyxDQUFMLENBQU8sSUFBUCxDQUFZLFdBQVosR0FDQSxzQkFEQSxHQUVBLHNCQUZBLEdBR0EsS0FBSyxDQUFMLENBQU8sZUFBUCxFQUF3QixXQUp4QjtBQU1ELE1BQUEsY0FBYyxDQUFDLEtBQWYsQ0FBcUIsS0FBckIsR0FBNkIsR0FBRyxLQUFLLENBQUwsQ0FBTyxhQUFQLEVBQXNCLFdBQXRCLEdBQW9DLHNCQUFzQixJQUExRjtBQUNDLE1BQUEsY0FBc0IsQ0FBQyxJQUF2QixHQUE4QixNQUFNLENBQUMsT0FBUCxDQUFlLENBQWYsRUFBa0IsSUFBaEQ7O0FBRUQsVUFBSSxNQUFNLENBQUMsT0FBUCxDQUFlLE1BQWYsR0FBd0IsQ0FBNUIsRUFBK0I7QUFDOUIsYUFBSyx1QkFBTDs7QUFDQSxhQUFLLGVBQUwsR0FBdUIsS0FBSyx5QkFBTCxDQUErQixNQUFNLENBQUMsT0FBdEMsQ0FBdkI7QUFDQTtBQUNELEtBZEQ7QUFlQTs7QUFFRCxFQUFBLHlCQUF5QixDQUFDLE9BQUQsRUFBa0I7QUFDMUMsVUFBTSxFQUFFLEdBQUcsSUFBSSxXQUFKLENBQWdCO0FBQUMsTUFBQSxNQUFNLEVBQUUsQ0FBQztBQUFWLEtBQWhCLENBQVg7QUFFQSxJQUFBLE9BQU8sQ0FBQyxLQUFSLENBQWMsQ0FBZCxFQUFpQixNQUFqQixDQUF3QixDQUFDLE9BQU8sQ0FBQyxDQUFELENBQVIsQ0FBeEIsRUFBc0MsT0FBdEMsQ0FBOEMsTUFBTSxJQUFHO0FBQ3RELE1BQUEsRUFBRSxDQUFDLEVBQUgsQ0FBTSxLQUFLLENBQUwsQ0FBTyxhQUFQLENBQU4sRUFBNkIsR0FBN0IsRUFBa0M7QUFDakMsUUFBQSxPQUFPLEVBQUUsQ0FEd0I7QUFFakMsUUFBQSxJQUFJLEVBQUUsSUFBSSxDQUFDO0FBRnNCLE9BQWxDLEVBR0csS0FBSyxnQkFBZ0IsRUFIeEI7QUFLQSxNQUFBLEVBQUUsQ0FBQyxJQUFILENBQVEsTUFBSztBQUNYLGFBQUssQ0FBTCxDQUFPLGFBQVAsRUFBOEIsSUFBOUIsR0FBcUMsTUFBTSxDQUFDLElBQTVDO0FBQ0QsT0FGRDtBQUlBLE1BQUEsRUFBRSxDQUFDLEVBQUgsQ0FBTSxLQUFLLENBQUwsQ0FBTyxhQUFQLENBQU4sRUFBNkIsR0FBN0IsRUFBa0M7QUFDakMsUUFBQSxPQUFPLEVBQUUsQ0FEd0I7QUFFakMsUUFBQSxJQUFJLEVBQUUsSUFBSSxDQUFDO0FBRnNCLE9BQWxDLEVBR0csT0FISDtBQUlBLEtBZEQ7QUFnQkEsV0FBTyxFQUFQO0FBQ0E7O0FBRUQsRUFBQSx1QkFBdUIsR0FBQTtBQUN0QixRQUFJLEtBQUssZUFBVCxFQUEwQjtBQUN6QixXQUFLLGVBQUwsQ0FBcUIsSUFBckI7O0FBQ0EsV0FBSyxlQUFMLEdBQXVCLElBQXZCO0FBQ0E7QUFDRDs7QUFFRCxFQUFBLGNBQWMsQ0FBQyxPQUFELEVBQWlCO0FBQzlCLFFBQUksQ0FBQyxPQUFELElBQVksT0FBTyxPQUFQLEtBQW1CLFFBQW5DLEVBQTZDO0FBQzVDLGFBQU8sR0FBUDtBQUNBOztBQUVELFdBQU8sT0FBTyxDQUFDLE9BQVIsQ0FBZ0IsTUFBaEIsRUFBd0IsR0FBeEIsQ0FBUDtBQUNBOztBQUVELEVBQUEsZUFBZSxDQUFDLE9BQUQsRUFBa0I7QUFDaEMsV0FBTyxPQUFPLENBQUMsTUFBUixDQUFlLENBQUMsV0FBRCxFQUFjLFlBQWQsS0FBOEI7QUFDbkQsVUFBSSxDQUFDLFlBQUQsSUFBaUIsQ0FBQyxZQUFZLENBQUMsSUFBbkMsRUFBeUM7QUFDeEMsZUFBTyxXQUFQO0FBQ0E7O0FBQ0QsYUFBTyxZQUFZLENBQUMsSUFBYixDQUFrQixNQUFsQixHQUEyQixXQUFXLENBQUMsTUFBdkMsR0FBZ0QsWUFBWSxDQUFDLElBQTdELEdBQW9FLFdBQTNFO0FBQ0EsS0FMTSxFQUtKLEVBTEksQ0FBUDtBQU1BOztBQS9GbUYsQ0FBckY7O0FBRUMsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQURDLFFBQVEsQ0FBQztBQUFDLEVBQUEsSUFBSSxFQUFFLE1BQVA7QUFBZSxFQUFBLFFBQVEsRUFBRSxxQkFBbUIsQ0FBQyxTQUFwQixDQUE4QjtBQUF2RCxDQUFELENBQ1QsQ0FBQSxFLDZCQUFBLEUsS0FBQSxFLEtBQVMsQ0FBVDs7QUFHQSxPQUFBLENBQUEsVUFBQSxDQUFBLENBREMsUUFBUSxDQUFDO0FBQUMsRUFBQSxJQUFJLEVBQUUsT0FBUDtBQUFnQixFQUFBLGtCQUFrQixFQUFFO0FBQXBDLENBQUQsQ0FDVCxDQUFBLEUsNkJBQUEsRSxRQUFBLEUsS0FBd0IsQ0FBeEI7O0FBR0EsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQURDLFFBQVEsQ0FBQztBQUFDLEVBQUEsSUFBSSxFQUFFO0FBQVAsQ0FBRCxDQUNULENBQUEsRSw2QkFBQSxFLHFCQUFBLEUsS0FBZ0MsQ0FBaEM7O0FBUm9CLG1CQUFtQixHQUFBLHFCQUFBLEdBQUEsT0FBQSxDQUFBLFVBQUEsQ0FBQSxDQUR2QyxhQUFhLENBQUMsd0JBQUQsQ0FDMEIsQ0FBQSxFQUFuQixtQkFBbUIsQ0FBbkI7ZUFBQSxtQiIsInNvdXJjZVJvb3QiOiIifQ==