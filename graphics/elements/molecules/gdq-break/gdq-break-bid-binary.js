import * as tslib_1 from "/bundles/gdqx18-layouts/node_modules/tslib/tslib.es6.js";
import { TweenLite, TimelineLite, Sine, Power3, Power4 } from "/bundles/gdqx18-layouts/node_modules/gsap/index.js";
import { typeAnim } from "../../../../shared/lib/TypeAnims.js";
import { createMaybeRandomTween } from "../../../../shared/lib/MaybeRandom.js";
const {
  customElement,
  property
} = Polymer.decorators;
const SVG = window.svgjs || window.SVG;
const ROTATION_FACTOR = 0.65;
/**
 * @customElement
 * @polymer
 */

let GdqBreakBidBinary = class GdqBreakBidBinary extends Polymer.Element {
  ready() {
    super.ready();

    this._initPieChartSVG();

    TweenLite.set(this.$.winningOptionAmount, {
      opacity: 0,
      x: -36,
      color: 'transparent'
    });
    TweenLite.set(this.$.losingOptionAmount, {
      opacity: 0,
      x: 36,
      color: 'transparent'
    });
    TweenLite.set(this._svgDoc.node, {
      opacity: 0
    });
  }

  enter() {
    const tl = new TimelineLite();
    const winningPercent = this.bid.options[0].rawTotal / this.bid.rawTotal;
    const proxy = {
      percent: 0
    };
    const winningOptionAmountEl = this.$.winningOptionAmount;
    const losingOptionAmountEl = this.$.losingOptionAmount;
    tl.call(() => {
      winningOptionAmountEl.innerText = '$' + this.bid.options[0].rawTotal.toLocaleString('en-US', {
        maximumFractionDigits: 0,
        useGrouping: false
      });
      losingOptionAmountEl.innerText = '$' + this.bid.options[1].rawTotal.toLocaleString('en-US', {
        maximumFractionDigits: 0,
        useGrouping: false
      });
    }, undefined, null, '+=0.03');
    tl.to([this.$.winningOptionAmount, this.$.losingOptionAmount], 0.384, {
      opacity: 1,
      x: 0,
      ease: Sine.easeOut
    });
    tl.call(() => {
      winningOptionAmountEl.style.color = '';
      losingOptionAmountEl.style.color = '';
      typeAnim(winningOptionAmountEl);
      typeAnim(losingOptionAmountEl);
    });
    tl.add(createMaybeRandomTween({
      target: this._svgDoc.node.style,
      propName: 'opacity',
      duration: 0.465,
      ease: Power4.easeIn,
      start: {
        probability: 1,
        normalValue: 0
      },
      end: {
        probability: 0,
        normalValue: 1
      }
    }), '+=0.1');
    tl.to(proxy, 1, {
      percent: winningPercent,
      ease: Power3.easeInOut,
      onStart: () => {
        this._svgDoc.style({
          transform: `rotate(${ROTATION_FACTOR}turn)`
        });

        winningOptionAmountEl.innerText = this.bid.options[0].description || this.bid.options[0].name;
        losingOptionAmountEl.innerText = this.bid.options[1].description || this.bid.options[1].name;
        typeAnim(winningOptionAmountEl);
        typeAnim(losingOptionAmountEl);
      },
      onUpdate: () => {
        this.drawWinningSlice(proxy.percent);
      }
    });
    return tl;
  }

  exit() {
    const tl = new TimelineLite();
    tl.add(createMaybeRandomTween({
      target: this.style,
      propName: 'opacity',
      duration: 0.2,
      ease: Power4.easeIn,
      start: {
        probability: 1,
        normalValue: 1
      },
      end: {
        probability: 0,
        normalValue: 0
      }
    }));
    return tl;
  }

  _initPieChartSVG() {
    const svgDoc = SVG(this.$.chart);
    svgDoc.viewbox(-1, -1, 2, 2);
    this._svgDoc = svgDoc;
    svgDoc.circle(2).fill({
      color: '#ffee54',
      opacity: 0.25
    }).move(-1, -1);
    const anglePI = ROTATION_FACTOR * 360 * (Math.PI / 180);
    const gradientCoords = {
      x1: Math.round(Math.sin(anglePI) * 50 + 50) + '%',
      y1: Math.round(Math.cos(anglePI) * 50 + 50) + '%',
      x2: Math.round(Math.sin(anglePI + Math.PI) * 50 + 50) + '%',
      y2: Math.round(Math.cos(anglePI + Math.PI) * 50 + 50) + '%'
    };
    const gradient = svgDoc.gradient('linear', stop => {
      stop.at(0, '#57c7ef');
      stop.at(1, '#63f1fd');
    }).from(gradientCoords.x1, gradientCoords.y1).to(gradientCoords.x2, gradientCoords.y2);
    this._winningSlice = svgDoc.path().fill(gradient);
  }

  drawWinningSlice(percent) {
    // Note the svg viewBox is offset so the center of the SVG is 0,0.
    const arcLength = Math.PI * 2 * percent;
    const startX = Math.cos(arcLength / -2);
    const startY = Math.sin(arcLength / -2);
    const endX = Math.cos(arcLength / 2);
    const endY = Math.sin(arcLength / 2);
    const largeArcFlag = percent > 0.5 ? 1 : 0;
    const d = [`M ${startX} ${startY}`, `A 1 1 0 ${largeArcFlag} 1 ${endX} ${endY}`, 'L 0 0'].join(' ');

    this._winningSlice.plot(d);
  }

};

tslib_1.__decorate([property({
  type: Object
})], GdqBreakBidBinary.prototype, "bid", void 0);

GdqBreakBidBinary = tslib_1.__decorate([customElement('gdq-break-bid-binary')], GdqBreakBidBinary);
export default GdqBreakBidBinary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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