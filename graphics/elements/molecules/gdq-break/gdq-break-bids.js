import * as tslib_1 from "/bundles/gdqx18-layouts/node_modules/tslib/tslib.es6.js";
import { TimelineLite, Sine, Power2 } from "/bundles/gdqx18-layouts/node_modules/gsap/index.js";
import GDQBreakLoopMixin from "../../../mixins/GDQBreakLoopMixin.js";
import { typeAnim } from "../../../../shared/lib/TypeAnims.js";
const {
  customElement
} = Polymer.decorators;
const EMPTY_OBJ = {};
const DISPLAY_DURATION = nodecg.bundleConfig.displayDuration;
const currentBids = nodecg.Replicant('currentBids');
/**
 * @customElement
 * @polymer
 */

let GdqBreakBids = class GdqBreakBids extends GDQBreakLoopMixin(Polymer.Element) {
  ready() {
    super.ready();
    this.maxNoMoreItemsRetries = 30;
    currentBids.on('change', newVal => {
      this.availableItems = newVal;
    });
  }

  show() {
    const tl = new TimelineLite();
    tl.to(this, 0.333, {
      opacity: 1,
      ease: Sine.easeInOut
    }, 0);
    tl.to(this, 1, {
      x: '0%',
      ease: Power2.easeOut
    }, 0);
    return tl;
  }

  hide() {
    const tl = new TimelineLite();
    tl.to(this, 1, {
      x: '-100%',
      ease: Power2.easeIn
    });
    tl.to(this, 0.333, {
      opacity: 0,
      ease: Sine.easeInOut
    }, '-=0.333');
    return tl;
  }

  _showItem(bid) {
    let elementTagName;

    if (bid.type === 'choice-many') {
      elementTagName = 'gdq-break-bid-many';
    } else if (bid.type === 'choice-binary') {
      elementTagName = 'gdq-break-bid-binary';
    } else if (bid.type === 'challenge') {
      elementTagName = 'gdq-break-bid-challenge';
    } else {
      nodecg.log.error('Got bid of unexpected type (%s):', bid.type, JSON.stringify(bid, null, 2));
    }

    const tl = new TimelineLite();

    if (!elementTagName) {
      return tl;
    }

    const previousElement = this._previousBidElement;
    const element = document.createElement(elementTagName);
    element.bid = bid;
    this._previousBidElement = element;
    this.$.content.appendChild(element);

    if (previousElement) {
      tl.add(previousElement.exit());
      tl.call(() => {
        previousElement.remove();
      });
    }

    tl.call(() => {
      const contentElem = this.$.content;
      contentElem.selectIndex(contentElem.indexOf(element));
      this.$['description-actual'].innerHTML = bid.description.replace(/\\n/g, '</br>');
      typeAnim(this.$['description-actual']);
    }, undefined, null, '+=0.1');
    tl.add(element.enter()); // Give the bid some time to show.

    tl.to(EMPTY_OBJ, DISPLAY_DURATION, EMPTY_OBJ);
    return tl;
  }

};
GdqBreakBids = tslib_1.__decorate([customElement('gdq-break-bids')], GdqBreakBids);
export default GdqBreakBids;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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