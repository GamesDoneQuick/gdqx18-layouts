import * as tslib_1 from "/bundles/gdqx18-layouts/node_modules/tslib/tslib.es6.js";
const {
  customElement,
  property
} = Polymer.decorators;
const cashTotal = nodecg.Replicant('total');
const autoUpdateTotal = nodecg.Replicant('autoUpdateTotal');
let GdqTotals = class GdqTotals extends Polymer.Element {
  constructor() {
    super(...arguments);
    this.cashTotal = '?';
    this.bitsTotal = '?';
  }

  ready() {
    super.ready();
    cashTotal.on('change', newVal => {
      this.cashTotal = newVal.formatted;
    });
    autoUpdateTotal.on('change', newVal => {
      this.autoUpdateTotal = newVal;
    });
  }

  editCashTotal() {
    if (!cashTotal.value) {
      return;
    }

    this.$.editTotalInput.value = String(cashTotal.value.raw);
    this._editTarget = 'cash';
    this.$.editDialog.open();
  }

  _handleAutoUpdateToggleChange(e) {
    if (!e.target) {
      return;
    }

    autoUpdateTotal.value = Boolean(e.target.checked);
  }

  _handleEditDialogConfirmed() {
    nodecg.sendMessage('setTotal', {
      type: this._editTarget,
      newValue: parseFloat(String(this.$.editTotalInput.value))
    });
  }

};

tslib_1.__decorate([property({
  type: String
})], GdqTotals.prototype, "cashTotal", void 0);

tslib_1.__decorate([property({
  type: String
})], GdqTotals.prototype, "bitsTotal", void 0);

tslib_1.__decorate([property({
  type: Boolean
})], GdqTotals.prototype, "autoUpdateTotal", void 0);

tslib_1.__decorate([property({
  type: Boolean
})], GdqTotals.prototype, "recordTrackerEnabled", void 0);

tslib_1.__decorate([property({
  type: String
})], GdqTotals.prototype, "_editTarget", void 0);

GdqTotals = tslib_1.__decorate([customElement('gdq-totals')], GdqTotals);
export default GdqTotals;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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